package com.alatka.messages.jmh;


import com.alatka.messages.definition.FixedYamlMessageDefinitionBuilder;
import com.alatka.messages.definition.IsoYamlMessageDefinitionBuilder;
import com.alatka.messages.holder.MessageHolder;
import com.alatka.messages.message.MessageBuilder;
import org.openjdk.jmh.annotations.*;

import java.util.*;
import java.util.concurrent.TimeUnit;

@BenchmarkMode(Mode.Throughput)
@OutputTimeUnit(TimeUnit.MILLISECONDS)
@Warmup(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)
@Measurement(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)
public class MessageTest {

    private static final Map<String, List<String>> MESSAGES_MAP = new HashMap<>();
    private static final Map<String, MessageBuilder> MESSAGE_BUILDER_MAP = new HashMap<>();

    private static final String KEY_ISO_JCB = "iso:jcb:common:payload";
    private static final String KEY_ISO_CUPS = "iso:cups:common:payload";
    private static final String KEY_ISO_CUPD = "iso:cupd:common:payload";
    private static final String KEY_FIXED_4118_REQ = "fixed:9001:4118:request";
    private static final String KEY_FIXED_4118_RES = "fixed:9001:4118:response";
    private static final String KEY_FIXED_3006_REQ = "fixed:9001:3006:request";
    private static final String KEY_FIXED_3006_RES = "fixed:9001:3006:response";

    static {
        List<String> list1 = new ArrayList<>();
        list1.add("F0F1F0F0767D448188E1A008103568560090000176000000000000000176000000000176122913412700000001000172134127122925041229639981000008885280000888518000F0F0F0F1F7F2F1F2F1F3F2F7F3F9F4F5F3F34040F3F2F5F6F2F2F0F340404040404040D1C3C240E3C5E2E340D4C5D9C3C8C1D5E3404040404040E3C5E2E340C3C9E3E84040404040D1D7D54AF0F2F4F71122334455667788990011223344556677889900000201094725454745445395202545900000000006404040404040F0F3F1F4F9F6F5F8F7F4404040F1F4404040F0F4F0F1F0F8F4F0F8F4F006F2F2F2F3F9F2");
        list1.add("F0F1F0F0723C4481A8E180081035601234567890120000000000000261190923072729468214151228092398125399022004088802000008880200002503560123456789012198121010000033300000F9F4F0F9F2F3F4F6F8F2F1F47B94F2F386F891F4F1F1F7F5F1F8404040404040404040C1C3D8E4C9D9C5D940D5C1D4C540404040404040404040C3C9E3E840D5C1D4C54040404040E4E2C107F0F1F0F3F1F2F3F3F4F406F2F2F2F3F4F4");
        list1.add
        list1.add("F0F1F0F0723844C1A8A0980810356012345678901201000000000002022002250345250088811245300225601102100004088812300008884560002503560123456789012105011011123498700000F0F0F7F0F5F9F4F8F0F1F2F9C1C1F0F0F3C2F9F2C1C3D8E4C9D9C5D940D5C1D4C540404040404040404040C3C9E3E840D5C1D4C54040404040E4E2C1F8F4F01223334444555556990101000056780006F0F0F2F7F6F4");
        list1.add("F0F1F1F0723C00018E60820010356012345678901200000000000001000001211349350000031349350121021208887010000888704000F0F0F0F0F0F0F0F2F6F9F9F3F5F0F2F9F3F2F0F0F4F0F0F1F0F1F2F3F4F5F6F7F24040C1C3D8E4C9D9C5D940D5C1D4C540404040404040404040C3C9E3E840D5C1D4C54040404040E4E2C1F8F2F6000C910A0CF41B31653661173030");
        list1.add("F0F1F2F0723C4481AEE180181035409999999999990000000000000261190923072729468214151228092398125399022004088802000008880200002503560123456789012198121010000033300000F9F4F0F9F2F3F4F6F8F2F1F4F9F8F7F6F5F4F0F07B94F2F386F891F4F1F1F7F5F1F8404040404040404040C1C3D8E4C9D9C5D940D5C1D4C540404040404040404040C3C9E3E840D5C1D4C54040404040E4E2C107F0F1F0F3F1F2F3F3F4F40AF0F1F0F1F1F0F2F0F1F206F2F2F2F3F4F4");
        list1.add("F0F3F0F2822000018080000200000000080001021215131501108971088801000008880100007B94F2F386F891F408E2C3D7D7D7E2C5E704F6F3F3F2001EF1F3F5F4F0F5F9F9F9F9F9F9F9F1F1F2F0F0F4F2F0F0F0F1F2F1F1F1F1F10006F3F5F4F0F0F0");
        list1.add("F0F3F0F2822000018080000200000000080001021215131501108971088801000008880100007B94F2F386F891F408E2C3D7D7D7E2C5E704F6F3F3F2001EF2F3F5F4F0F5F9F9F9F9F9F9F9F1F1F2F0F4F3F1F9F9F9F1F2F1F1F1F1F10006F3F5F4F0F0F0");
        list1.add("F0F3F0F28220000180000002000000000800010202120908070345670888801000088880200008E2C3D7D7D7E2C5E704F6F3F3F20011F5F3F5F4F0F1F2F3F4F5F6F7F8F9F0F1F20006F9F8F7F6F5F4");
        list1.add("F0F3F1F282200001820000020000000008000100021209080703456708888010000888802000F0F008E2C3D7D7D7E2C5E704F6F3F3F2001EF5F3F5F4F0F1F2F3F4F5F6F7F8F9F0F1F2F4F3F2F0F0F5F0F4F0F0F0F0F0");
        list1.add("F0F4F2F0F23804818E60800000000042000000001035405999999999990000000000000261190923084813640003163401092302200408880200000888020000F9F4F0F9F2F3F6F4F0F0F0F3F2F0F9F8F7F6F1F7F1F1F7F5F1F8F1F1F7C1C3D8E4C9D9C5D940D5C1D4C540404040404040404040C3C9E3E840D5C1D4C54040404040E4E2C1F5F1F8F1F1F7F3F4F4010064000309230847330008802000000088020000F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0");
        list1.add("F0F6F2F00220000000010000092311312021869628F0F8F3F6822000008000000004000000100000000905211558218372088802000099990888502000");
        list1.add("F0F8F0F0822000008000000004000000100000000905211558218372088802000000010888502000");
        list1.add("F0F8F0F0822000008000000004000000100000000905211558218372088802000000020888502000");
        list1.add("F0F8F0F0822000008000000004000000100000000905211558218372088802000003010888502000");

        List<String> list2 = new ArrayList<>();
        list2.add("30323030E23A44C1A8E098120000000010000081313636323531383830303030303531363838333030303030303832353131323430303836333734333131323430303038323530383235363031313032313032303630383932323530303030303839323235303030303334363235313838303030303035313638383D3238303535303130303030303030303931303030303030303231363830313233343536373831323334353637383930313233343543484E32393030304348494E4120554E494F4E5041592053494D554C41544F522020202020202020313536000000000000000032343030303030303030303030303030303237303030303035303030313030303030303030303034303231303032303231534D303136E069374A9BC6AB9A659912BE707F824330383033303530303031303433353131533030303030303032353033303530303031202020303030303030303030303030303041413030303044363132303134");
        list2.add("30323130E23E40818AC0801000000000100000813136363235313838303030303035313638383330303030303038323531313234303038363337343331313234303030383235303030303038323536303131303230383932323530303030303839323235303030303030303030303032313638303134313233343536373831323334353637383930313233343531353630333030303030303530303031303030303030303030303430323130303230303030383033303530303031303433353131533030303030303032353033303530303031202020303030303030303030303030303041413030304233333537423636");
        list2.add
        list2.add
        list2.add

        List<String> list3 = new ArrayList<>();
        list3.add
        list3.add
        list3.add
        list3.add("30323330F23A40818AC080000000000010000001313636323833303130333030303030303139323030303030303030303030303039393031313031323131303934343030303032303131303934343130313230343032363031333030303836353139313130303038363531393131303032333130313231313039343430303030393938383031303030303030303030303030303030313536303836353139313130304438303442413532");

        List<String> list4 = new ArrayList<>();
        list4.add

        List<String> list5 = new ArrayList<>();
        list5.add("3431313830303030303030333035393939393930505230303030303038393139303943312020202020203232313838313139393433383237333238382020202020202020202020202020202020202020435554414720202020B2E2CAD4746167B1EAC7A92020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020");

        List<String> list6 = new ArrayList<>();
        list6.add("33303036202020202020303330355052393939393930303030303030343136393735363232353434343935393539323334202020203234303531313230323430353031323032343035303131383336353230383030303030302020202020202020202020");

        List<String> list7 = new ArrayList<>();
        list7.add

        MESSAGES_MAP.put(KEY_ISO_JCB, list1);
        MESSAGES_MAP.put(KEY_ISO_CUPS, list2);
        MESSAGES_MAP.put(KEY_ISO_CUPD, list3);
        MESSAGES_MAP.put(KEY_FIXED_4118_REQ, list4);
        MESSAGES_MAP.put(KEY_FIXED_4118_RES, list5);
        MESSAGES_MAP.put(KEY_FIXED_3006_REQ, list6);
        MESSAGES_MAP.put(KEY_FIXED_3006_RES, list7);

        new IsoYamlMessageDefinitionBuilder().build();
        new FixedYamlMessageDefinitionBuilder().build();

        MESSAGE_BUILDER_MAP.put(KEY_ISO_JCB, MessageBuilder.init(KEY_ISO_JCB));
        MESSAGE_BUILDER_MAP.put(KEY_ISO_CUPS, MessageBuilder.init(KEY_ISO_CUPS));
        MESSAGE_BUILDER_MAP.put(KEY_ISO_CUPD, MessageBuilder.init(KEY_ISO_CUPD));
        MESSAGE_BUILDER_MAP.put(KEY_FIXED_4118_REQ, MessageBuilder.init(KEY_FIXED_4118_REQ));
        MESSAGE_BUILDER_MAP.put(KEY_FIXED_4118_RES, MessageBuilder.init(KEY_FIXED_4118_RES));
        MESSAGE_BUILDER_MAP.put(KEY_FIXED_3006_REQ, MessageBuilder.init(KEY_FIXED_3006_REQ));
        MESSAGE_BUILDER_MAP.put(KEY_FIXED_3006_RES, MessageBuilder.init(KEY_FIXED_3006_RES));

    }

    @Benchmark
    public MessageHolder testIsoJcb() {
        return this.unpack(KEY_ISO_JCB);
    }

    @Benchmark
    public MessageHolder testIsoCups() {
        return this.unpack(KEY_ISO_CUPS);
    }

    @Benchmark
    public MessageHolder testIsoCupd() {
        return this.unpack(KEY_ISO_CUPD);
    }

    @Benchmark
    public MessageHolder testFixed4118Req() {
        return this.unpack(KEY_FIXED_4118_REQ);
    }

    @Benchmark
    public MessageHolder testFixed4118Res() {
        return this.unpack(KEY_FIXED_4118_RES);
    }

    @Benchmark
    public MessageHolder testFixed3006Req() {
        return this.unpack(KEY_FIXED_3006_REQ);
    }

    @Benchmark
    public MessageHolder testFixed3006Res() {
        return this.unpack(KEY_FIXED_3006_RES);
    }

    private MessageHolder unpack(String key) {
        List<String> list = MESSAGES_MAP.get(key);
        MessageBuilder messageBuilder = MESSAGE_BUILDER_MAP.get(key);
        int index = new Random().nextInt(list.size());
        return messageBuilder.unpack(list.get(index));
    }
}
