package com.alatka.messages;

import com.alatka.messages.definition.IsoYamlMessageDefinitionBuilder;
import com.alatka.messages.holder.MessageHolder;
import com.alatka.messages.message.MessageBuilder;
import com.alatka.messages.model.iso.jcb.CommonPayload;
import com.alatka.messages.util.BytesUtil;
import com.alatka.messages.util.JsonUtil;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public class MessageCupsYamlTest {

    @BeforeAll
    public static void beforeAll() {
        new IsoYamlMessageDefinitionBuilder().build();
    }

    private void doTest(String hex, String key) {
        MessageHolder holder = MessageBuilder.init(key).unpack(hex);
        System.out.println(holder);
        byte[] pack = MessageBuilder.init(key).pack(holder);
        Assertions.assertEquals(BytesUtil.bytesToHex(pack), hex.toUpperCase());

        MessageHolder holder1 = MessageBuilder.init(key).unpack(pack);
        Assertions.assertEquals(holder1, holder);
    }

    @Test
    public void test01() {
        String hex
        this.doTest(hex, "iso:cups:common:payload");
    }

    @Test
    public void test02() {
        String hex = "30323130E23E40818AC0801000000000100000813136363235313838303030303035313638383330303030303038323531313234303038363337343331313234303030383235303030303038323536303131303230383932323530303030303839323235303030303030303030303032313638303134313233343536373831323334353637383930313233343531353630333030303030303530303031303030303030303030303430323130303230303030383033303530303031303433353131533030303030303032353033303530303031202020303030303030303030303030303041413030304233333537423636";
        this.doTest(hex, "iso:cups:common:payload");
    }

    @Test
    public void test03() {
        String hex
        this.doTest(hex, "iso:cups:common:payload");
    }

    @Test
    @Disabled
    public void test04() {
        String hex
        this.doTest(hex, "iso:cups:common:payload");
    }

    @Test
    public void test05() {
        String hex = "30323030E23A46C1A8E09A1200000000100000813136363232363031303536323838353437393330303030303038323531333435303638363338303931333435303630383235303832353630313130353130303130323036303839323235303030303038393232353030303033323632323630313035363238383534373944333131323939393132333435313438303030303030303231363832313233343536373831323334353637383930313233343543484E32393030304348494E4120554E494F4E5041592053494D554C41544F5220202020202020203135360000000000000000323430303030303030303030303030303131379F2608A3502DDAE93CE1A19F2701809F101307020103AB806010000000000900000C060A299F37040B7FBD489F36023810950500001800009A032308259C01019F02060000000000005F2A02015682027D009F1A0201569F03060000000000009F3303E098C09F3501229F1E083230303331323330303237303030303036303030313030303030303030303034303232313032303231534D303136B243A0CBC3A624D6F3DF920B10FAB4EA30383033303530303031303433353131533030303030303032353033303530303031202020303030303030303030303030303041413030303935393637313539";
        this.doTest(hex, "iso:cups:common:payload");
    }

    @Test
    @Disabled
    public void test06() {
        String hex
        this.doTest(hex, "iso:cups:common:payload");
    }

    @Test
    public void test07() {
        String hex
        this.doTest(hex, "iso:cups:common:payload");
    }

    @Test
    @Disabled
    public void test08() {
        String hex
        this.doTest(hex, "iso:cups:common:payload");
    }

    @Test
    public void test09() {
        String hex = "2E023034303730333035303030312020203030303130303030202020414139013030303030303030003030303030";
        this.doTest(hex, "iso:cups:common:header");
    }

}
